# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-coffee-note
useDotenv: true
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3.26.0"

provider:
  name: aws
  # architecture: arm64  # デフォルトはx86_64
  runtime: python3.8
  lambdaHashingVersion: 20201221
  # you can overwrite defaults here
  #  stage: dev
  region: ap-northeast-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
          Resource: "arn:aws:dynamodb:*:*:table/coffee_note"
  environment:
    AUTH0_AUDIENCE: ${env:AUTH0_AUDIENCE}
    AUTH0_JWKS_URL: ${env:AUTH0_JWKS_URL}
  ecr:
    images:
      auth:
        file: Dockerfile
        path: handler/auth
        # platform: linux/arm64
      coffee_note:
        file: Dockerfile
        path: handler/coffee_note
        # platform: linux/arm64

resources:
  Resources:
    coffeeNote:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: coffee_note
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: date
            AttributeType: N
        KeySchema: [
            {
              KeyType: "HASH",
              AttributeName: "user_id",
            },
            {
              KeyType: "RANGE",
              AttributeName: "date",
            }]
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  auth:
    image:
      name: auth
      command: auth.auth_handler

  coffeeNote:
    image:
      name: coffee_note
      command: coffee_note.coffee_note_handler
    events:
      - http:
          path: /coffee_note
          method: get
          integration: lambda-proxy
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: /coffee_note
          method: post
          integration: lambda-proxy
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: /coffee_note
          method: delete
          integration: lambda-proxy
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            type: request